<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.zcf.test</groupId>
  <artifactId>springboot.learn.xml</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>springboot.learn.xml Maven Webapp</name>
  <url>http://maven.apache.org</url>
 	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.7.RELEASE</version>
		<relativePath />
	</parent>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.7</java.version>
	</properties>
	<dependencies>
		<!-- 核心启动器，包括自动配置支持，日志记录和YAML -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		
		<!-- 发送邮件 -->
		<dependency> 
			   <groupId>org.springframework.boot</groupId>
			   <artifactId>spring-boot-starter-mail</artifactId>
	    </dependency> 
		
		<!-- 	使用JUnit，Hamcrest和Mockito的库测试Spring Boot应用程序的启动器    -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- 使用Spring MVC构建Web，包括RESTful应用程序。使用Tomcat作为默认的嵌入式容器的启动器 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
		<!-- 集成Springboot与Mybatis的jar包-->
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>1.1.1</version>
		</dependency> 
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.42</version>
		</dependency>
		
		<!-- 热启动 -->
	    <dependency>  
	                <groupId>org.springframework.boot</groupId>  
	                <artifactId>spring-boot-devtools</artifactId>  
	                <optional>true</optional>  
	      </dependency>  
		
		<!-- tomcat 的支持. 配合application.properties里的jsp前缀、后缀-->  
	     <dependency>  
	         <groupId>org.springframework.boot</groupId>  
	         <artifactId>spring-boot-starter-tomcat</artifactId>  
	         <scope>provided</scope>  
	     </dependency>  
	     <dependency>  
	         <groupId>org.apache.tomcat.embed</groupId>  
	         <artifactId>tomcat-embed-jasper</artifactId>  
	         <scope>provided</scope>  
	     </dependency> 
	     
	     <!-- 移除内置tomcat依赖 -->
	    <dependency>  
            <groupId>org.springframework.boot</groupId>  
            <artifactId>spring-boot-starter-web</artifactId>  
            <exclusions>  
                <exclusion>  
                    <groupId>org.springframework.boot</groupId>  
                    <artifactId>spring-boot-starter-tomcat</artifactId>  
                </exclusion>  
            </exclusions>  
        </dependency>  
        
        <dependency>  
            <groupId>javax.servlet</groupId>  
            <artifactId>javax.servlet-api</artifactId>  
        </dependency>
        
         <dependency>
	        <groupId>net.sf.json-lib</groupId>
	        <artifactId>json-lib</artifactId>
	        <version>2.4</version>
	        <classifier>jdk15</classifier>
	    </dependency>
	</dependencies>
	<build>
		<plugins>
				<!--创建可执行的jar(可执行的jar（有时称为“fat jars”）是
				包含编译的类以及代码运行所需要的所有jar包依赖的归档(archives)。) 
					该插件的作用：可以将项目打包成可执行jar
				 -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			
			<!-- 添加maven的war打包插件如下：并且给war包起一个名字，tomcat部署后的访问路径会需要，
			如：http:localhost:8080/myweb/**** -->
			<plugin>       
			   <groupId>org.apache.maven.plugins</groupId>       
			   <artifactId>maven-war-plugin</artifactId>       
			   <configuration>       
			    <warSourceExcludes>src/main/resources/**</warSourceExcludes>  
			    <warName>myweb</warName>       
			   </configuration>       
		   </plugin>   
		</plugins>
	</build>
</project>
